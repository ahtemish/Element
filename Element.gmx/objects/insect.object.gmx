<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>insectLeft_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>nonhittableEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial values

initialX = x;
initialY = y;

enemyType = "insect";

initial = true;
gameStarted = false;

left = true;
right = false;

dead = false;
attack = false;
inWater = false;
move = false;
inv = false;

waterAbility = true;

hitByFireball = false;

minimumDistance = 10;
detectionDistance = 150;

attackSpeed = (4/30);
damage = 0.3;
initialHealth = 5;
instanceHealth = initialHealth;

standLeft = insectLeft_spr;
walkLeft = insectLeft_spr;
attackLeft = insectLeft_spr;
dieLeft = insectDieLeft_spr;
standRight = insectRight_spr;
walkRight = insectRight_spr;
attackRight = insectRight_spr;
dieRight = insectDieRight_spr;
walkImageSpeed = 4 / room_speed;
sprite_index = standLeft;

walkSpeed = 35 / room_speed;
runMult = 4;
runSpeed = walkSpeed * runMult;
runImageSpeed = walkImageSpeed * runMult;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End attack

attack = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move again

move = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if hit

if (!dead) {
    for(num = 0; num &lt; 5; num++) {
        if (global.enemyHitId[num] == id &amp;&amp; !inv) {
            inv = true;
            if (global.enemyHitType[num] == "air") {
                playerDamage = 2;
                hitByFireball = false;
            } else if (global.enemyHitType[num] == "earth") {
                playerDamage = 6;
                hitByFireball = false;
            }  else if (global.enemyHitType[num] == "water") {
                playerDamage = 4;
                hitByFireball = false;
            }
            instanceHealth -= playerDamage;
            global.enemyHit[num] = false;
            global.enemyHitId[num] = noone;
            global.enemyHitType[num] = noone;
        }
    }
    if(place_meeting(x, y, fireball)) {
        conFireball = instance_place(x, y, fireball);
        if(conFireball.firedBy = Player) {
            instanceHealth -= 2;
            hitByFireball = true;
            with(conFireball) {
                instance_destroy();
            }
        }
    }
}
    
if(instanceHealth &lt;= 0) {
    dead = true;
    instance_change(insectDead, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if this should exist

if (initial) {
        found = false;
        for(i = 0; i &lt; array_length_1d(global.enemies); i++) {
            if (global.enemies[i] = id)
                found = true;
        }
        if (!found)
            instance_destroy();
    
    
    initial = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check movement


run = runSpeed;
walk = walkSpeed;

middleX = Player.x + (Player.sprite_width / 2);
middleY = Player.y + (Player.sprite_height / 2);

if (!dead) {
    if (distance_to_object(Player) &lt; detectionDistance 
        &amp;&amp; !collision_line(x, y, Player.x, Player.y, terrain, false, true)) {
    
        image_speed = runImageSpeed;
        if (Player.x &lt; x) {
            left = true;
            right = false;
        } else {
            left = false;
            right = true;
        }
        
        if(distance_to_object(Player) &lt; minimumDistance) {
            if (!move) {
                alarm[1] = room_speed * (5/30);
                xPoint = middleX - minimumDistance + irandom(Player.sprite_width + (minimumDistance * 2));
                yPoint = middleY - minimumDistance + irandom(Player.sprite_height + minimumDistance);
                move = true;
            } else {
                piranhaMovement(xPoint, yPoint, run);
            }
            if (!attack &amp;&amp; place_meeting(x, y, Player)) {
                alarm[2] = room_speed * attackSpeed;
                effectiveDamage = damage;
                if(Player.earthAbility)
                    effectiveDamage *= 0.7;
                if (Player.fireAbility || Player.earthAbility)
                    effectiveDamage *= 2;
                    
                audio_play_sound(snd_playerDamaged, 10, false);
                Player.health -= effectiveDamage;
                attack = true;
            }
        } else {
            piranhaMovement(middleX, middleY, run);
        }
    } else {
        image_speed = walkImageSpeed;
        piranhaMovement(initialX, initialY, walk);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>drawHealth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
