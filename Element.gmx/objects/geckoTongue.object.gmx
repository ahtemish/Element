<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>geckoTongue_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>notPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial values

destinationX = 0;
damage = 0;
hitPlayer = false;
extendedTooFar = false;
left = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Extend tongue

if (place_meeting(x, y, Player) &amp;&amp; !place_meeting(x - sprite_width, y, geckoTongue)) {
    if (!hitPlayer) {
        effectiveDamage = damage;
                    
        if(Player.earthAbility &amp;&amp; !gecko.earthAbility) {
            effectiveDamage *= 0.7;
        }
        if (gecko.airAbility) {
            if (Player.fireAbility || Player.earthAbility) {
                effectiveDamage /= 2;
            }
        } else if (gecko.waterAbility) {
            if (Player.fireAbility || Player.earthAbility) {
                effectiveDamage *= 2;
            }
        } else if (gecko.fireAbility) {
            if (Player.earthAbility) {
                effectiveDamage /= 2;
            } else if (Player.waterAbility){
                effectiveDamage /= 1.5;
            } else if (Player.airAbility) {
                effectiveDamage *= 2;
            }
        }
        Player.health -= effectiveDamage;
    }
    with (geckoTongue) hitPlayer = true;
    gecko.alarm[2] = room_speed * gecko.attackSpeed;
} else if (destinationX &gt; x) {
    with (geckoTongue) extendedTooFar = true;
    gecko.alarm[2] = room_speed * gecko.attackSpeed;
}

if (hitPlayer || extendedTooFar) {
    if (hitPlayer) {
        Player.hitByTongue = true;
        if (x &lt; Player.x)
            instance_destroy();
    }
    x += sprite_width;
    if(place_meeting(x - sprite_width, y, gecko))
        instance_destroy();
}

if (!hitPlayer &amp;&amp; !extendedTooFar) {
    if (!place_meeting(x - sprite_width, y, geckoTongue)) {
        nextTongue = instance_create(x - sprite_width, y, geckoTongue);
        nextTongue.destinationX = destinationX;
        nextTongue.damage = damage;
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
