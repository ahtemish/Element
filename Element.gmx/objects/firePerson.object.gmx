<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>firePersonStandLeft_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>playerMask_spr</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial values

instanceHealth = 4;
runSpeed = 5;
walkSpeed = 2;
walking = false;
walkTimer = 0;
fall = 0;
fallMax = 20;
fallMult = 1;
left = true;
right = false;
dead = false;

randomize();
alarm[0] = irandom(30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start move

walkTimer = 15;
walking = true;
walkDirection = irandom(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if hit

if(!dead) {
    if(global.enemyHit) {
        if(global.enemyHitId = id) {
            instanceHealth--;
            global.enemyHit = false;
            global.enemyHitId = noone;
        }
    }
}
    
if(instanceHealth &lt;= 0) {
    dead = true;
    instance_change(firePersonDead, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check movement

if(!dead) {
    if (place_free(x, y + fallMult + fall)) {
        if (fall &lt; fallMax) {
            fall += fallMult;
        }
        y += fall;
    }
    else {
        fall = 0;
        
        if(distance_to_object(Player) &lt; 150) {
            if(Player.x &lt; x) {
                left = true;
                right = false;
                if (place_free(x - runSpeed,y) &amp;&amp; abs(Player.x - x) &gt; runSpeed) {
                    sprite_index = firePersonStandLeft_spr;
                    x -= runSpeed;
                }
            } else {
                left = false;
                right = true;
                if (place_free(x + runSpeed,y) &amp;&amp; abs(Player.x - x) &gt; runSpeed) {
                    sprite_index = firePersonStandRight_spr;
                    x += runSpeed;
                }
            }
        } else {
            if(walkTimer &gt; 0) {
                walkTimer--;
            } else {
                walking = false;
                alarm[0] = irandom(30);
            }
        
            if(walking) {
                if(walkDirection == 0) {
                    left = true;
                    right = false;
                    sprite_index = firePersonStandLeft_spr;
                    if (place_free(x - walkSpeed, y)) {
                        x -= walkSpeed;
                    } else {
                        x -= distance_to_object(instance_place(x - walkSpeed, y, all)) - 1;
                    }
                } else {
                    left = false;
                    right = true;
                    sprite_index = firePersonStandRight_spr;
                    if (place_free(x + walkSpeed, y)) {
                        x += walkSpeed;
                    } else {
                        x += distance_to_object(instance_place(x + walkSpeed, y, all)) - 1;
                    }
                }
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
