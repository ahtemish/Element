<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>elviraStandLeftFire_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>hittableEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial values

initial = true;
enemyType = "ElviraFire";

gameStarted = false;

walking = false;
walkTimer = 0;
fall = 0;
fallMax = 600 / room_speed;
fallMult = 30 / room_speed;

left = true;
right = false;

dead = false;
flung = false;
flungBy = noone;
hitByWater = false;
attack = false;
inWater = false;
inv = false;

airAbility = false;
earthAbility = false;
fireAbility = true;
waterAbility = false;

hitByFireball = false;
minimumDistance = 4;

damage = 1;
initialHealth = 160;
instanceHealth = initialHealth;
walkSpeed = 60 / room_speed;
runMult = 2;
standLeft = elviraStandLeftFire_spr;
walkLeft = elviraWalkLeftFire_spr;
attackLeft = elviraAttackLeftFire_spr;
dieLeft = dieLeftFire_spr;
standRight = elviraStandRightFire_spr;
walkRight = elviraWalkRightFire_spr;
attackRight = elviraAttackRightFire_spr;
dieRight = dieRightFire_spr;
walkImageSpeed = 4 / room_speed;
attackImageSpeed = walkImageSpeed;

sprite_index = standLeft;
runSpeed = walkSpeed * runMult;
runImageSpeed = walkImageSpeed * runMult;

randomize();
alarm[0] = irandom_range(5, 10) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (waterTop) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End attack

if (flung) alarm[2]++;

if (!dead) {
    attack = false;
    if(left) {
        sprite_index = standLeft;
    } else {
        sprite_index = standRight;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// No longer slowed
hitByWater = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hop

if (Player.x &gt; 160 &amp;&amp; !Player.cutscene &amp;&amp; !flung) {
    if (x &gt; 400) {
        path_start(elviraHopToLeft, 12, path_action_stop, false);
        sprite_index = walkLeft;
    } else {
        path_start(elviraHopToRight, 12, path_action_stop, false);
        sprite_index = walkRight;
    }
}

alarm[0] = irandom_range(5, 10) * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if hit

if (!dead &amp;&amp; !Player.cutscene) {
    for(num = 0; num &lt; 5; num++) {
        if (global.enemyHitId[num] == id &amp;&amp; !inv 
            &amp;&amp; ((Player.x &lt; x &amp;&amp; !instance_exists(fireShieldLeft)) 
                 ||(Player.x &gt; x &amp;&amp; !instance_exists(fireShieldRight)))) {
            inv = true;
            if (global.enemyHitType[num] == "air") {
                playerDamage = 2;
                hitByFireball = false;
                if(earthAbility) {
                    playerDamage *= 0.7;
                }
                if(fireAbility || earthAbility) {
                    playerDamage /= 2;
                }
            } else if (global.enemyHitType[num] == "earth") {
                playerDamage = 6;
                flung = true;
                flungBy = Player.id;
                hitByFireball = false;
            }  else if (global.enemyHitType[num] == "water") {
                playerDamage = 4;
                hitByFireball = false;
                if(!waterAbility) {
                    hitByWater = true;
                    alarm[1] = room_speed * 2; 
                }
                if(earthAbility) {
                    playerDamage *= 0.7;
                }
                if(fireAbility) {
                    playerDamage *= 2;
                }
            }
            instanceHealth -= playerDamage;
            global.enemyHit[num] = false;
            global.enemyHitId[num] = noone;
            global.enemyHitType[num] = noone;
        }
    }
    if(place_meeting(x, y, fireball)) {
        conFireball = instance_place(x, y, fireball);
        if(conFireball.firedBy = Player) {
            if (airAbility) {
                instanceHealth -= 6;
            } else if (earthAbility) {
                instanceHealth -= 1.05;
            } else if (waterAbility) {
                instanceHealth -= 2;
            } else {
                instanceHealth -= 3;
            }
            hitByFireball = true;
            with(conFireball) {
                instance_destroy();
            }
        }
    }
    CollisionChecking();
}
    
if(instanceHealth &lt;= 0) {
    Player.enemiesKilled[Player.numEnemiesKilled] = id;
    Player.numEnemiesKilled++;
    dead = true;
    instance_change(elementalEnemyDead, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set correct values for enemy based on type

if(initial) {

        found = false;
        for(i = 0; i &lt; array_length_1d(global.enemies); i++) {
            if (global.enemies[i] = id)
                found = true;
        }
        if (!found)
            instance_destroy();
    
    initial = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check movement

run = runSpeed;
walk = walkSpeed;

if(!dead) {
    if (Player.cutscene) alarm[2] = 2;
    
    if(flung)
        instance_change(ElviraFireFlung, true);
    else {
        flungBy = noone;
        
        Gravity();
    
        if (hitByWater &amp;&amp; !waterAbility) {
            run /= 2;
            walk /= 2;
        }
        
        if (Player.x &gt; 160) {
            if (Player.x &lt; x) {
                left = true;
                right = false;
            } else {
                left = false;
                right = true;
            }
            
            if(!attack &amp;&amp; place_meeting(x, y + sprite_width, terrain)) {
                
                attack = true;
                attackType = irandom(11);
                image_speed = attackImageSpeed;
                if (left)
                    sprite_index = attackLeft;
                else
                    sprite_index = attackRight;
                
                    
                if (attackType &lt; 4 &amp;&amp; !instance_exists(fireShieldLeft) &amp;&amp; Player.x &lt; x) {
                    alarm[2] = room_speed/2;
                    instance_create(x - 2, y, fireShieldLeft);
                } else if (attackType &lt; 4 &amp;&amp; !instance_exists(fireShieldRight) &amp;&amp; Player.x &gt; x) {
                    alarm[2] = room_speed/2;
                    instance_create(x + sprite_width + 2, y, fireShieldRight);
                } else if (attackType &lt; 6) {
                    alarm[2] = room_speed;
                    if (left)
                        elFireball = instance_create(x - 16, y + 7, fireball);
                    else
                        elFireball = instance_create(x + sprite_width, y + 7, fireball);
                    elFireball.firedBy = enemy;
                    elFireball.damage = 4;
                } else if (attackType &lt; 8) {
                    alarm[2] = room_speed;
                    firstPillar = irandom(4);
                    secondPillar = irandom(4);
                    thirdPillar = irandom_range(6, 14);
                    fourthPillar = irandom_range(6, 14);
                    instance_create(192 + (firstPillar * 32), y + sprite_height, lavaPillar);
                    instance_create(192 + (secondPillar * 32), y + sprite_height, lavaPillar);
                    instance_create(192 + (thirdPillar * 32), y + sprite_height, lavaPillar);
                    instance_create(192 + (fourthPillar * 32), y + sprite_height, lavaPillar);
                } else {
                    for (i = 0; i &lt; 18; i++) {
                        instance_create(160 + (i*32), 690, waterTop);
                    }
                    alarm[2] = room_speed;
                    alarm[3] = room_speed * 2;
                    with (waterTop) slowEarth = true;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>drawHealth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
